name: "Reusable deploy app Lambda Layer"

on:
  workflow_call:
    inputs:
      AWS_LAMBDA_LAYERS_NAME:
        type: string
        required: true
      env:
        type: string
        required: true
      artifact_name:
        type: string
        required: true
    secrets:
      AWS_ACCOUNT_ID:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.filter.outputs.targets }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            targets:
              - "packages/app/**"
              - ".github/actions/upload-artifact/action.yml"
              - ".github/actions/get-lambda-layer-arn-suffix/action.yml"
              - ".github/workflows/reusable-deploy-layer-app.yml"
              - ".github/workflows/reusable-publish-layer.yml"
              - ".github/workflows/reusable-update-function-configuration.yml"

  build-app:
    needs: changes
    if: ${{ needs.changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "18.16.1"
          cache: "npm"
          cache-dependency-path: "packages/app/package-lock.json"

      - name: "Install dependencies"
        run: npm ci --only=prod
        working-directory: "packages/app"

      - name: "Build"
        run: npm run build
        working-directory: "packages/app"

      - name: "Upload artifact"
        uses: ./.github/actions/upload-artifact
        with:
          artifact_name: ${{ inputs.artifact_name }}
          artifact_path: "packages/app/.output"
          include_basename: true

  call-publish-layer:
    uses: ./.github/workflows/reusable-publish-layer.yml
    needs: build-app
    with:
      AWS_LAMBDA_LAYERS_NAME: ${{ inputs.AWS_LAMBDA_LAYERS_NAME }}
      artifact_name: ${{ inputs.artifact_name }}
    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
