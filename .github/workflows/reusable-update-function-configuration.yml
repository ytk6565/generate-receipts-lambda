name: "Reusable update Lambda Function configuration"

on:
  workflow_call:
    inputs:
      AWS_LAMBDA_FUNCTION_NAME:
        type: string
        required: true
      AWS_LAMBDA_LAYER_NAME_APP:
        type: string
        required: true
      AWS_LAMBDA_LAYER_NAME_FUNCTION:
        type: string
        required: true
      AWS_LAMBDA_LAYER_NAME_FONTS:
        type: string
        required: true
      AWS_LAMBDA_LAYER_NAME_CHROMIUM:
        type: string
        required: true
    secrets:
      AWS_ACCOUNT_ID:
        required: true

env:
  AWS_ROLE_ARN: "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_ROLE_NAME }}"
  LAYER_ARN_PREFIX: "arn:aws:lambda:ap-northeast-1:${{ secrets.AWS_ACCOUNT_ID }}:layer"

permissions:
  id-token: write
  contents: read

jobs:
  aws-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{ env.AWS_ROLE_ARN }}

      - name: "Get Lambda Layer ARN suffix for app"
        id: app_layer_arn_suffix
        run: |
          LAYER_VERSION=$(aws lambda list-layer-versions \
          --layer-name ${{ inputs.AWS_LAMBDA_LAYER_NAME_APP }} \
          --max-items 1 \
          --no-paginate \
          --query 'LayerVersions[0].Version' \
          --output text)
          echo "LAYER_ARN_SUFFIX=${{ inputs.AWS_LAMBDA_LAYER_NAME_APP }}:${LAYER_VERSION}" >> $GITHUB_ENV

      - name: "Get Lambda Layer ARN suffix for function"
        id: function_layer_arn_suffix
        run: |
          LAYER_VERSION=$(aws lambda list-layer-versions \
          --layer-name ${{ inputs.AWS_LAMBDA_LAYER_NAME_FUNCTION }} \
          --max-items 1 \
          --no-paginate \
          --query 'LayerVersions[0].Version' \
          --output text)
          echo "LAYER_ARN_SUFFIX=${{ inputs.AWS_LAMBDA_LAYER_NAME_FUNCTION }}:${LAYER_VERSION}" >> $GITHUB_ENV

      - name: "Get Lambda Layer ARN suffix for fonts"
        id: fonts_layer_arn_suffix
        run: |
          LAYER_VERSION=$(aws lambda list-layer-versions \
          --layer-name ${{ inputs.AWS_LAMBDA_LAYER_NAME_FONTS }} \
          --max-items 1 \
          --no-paginate \
          --query 'LayerVersions[0].Version' \
          --output text)
          echo "LAYER_ARN_SUFFIX=${{ inputs.AWS_LAMBDA_LAYER_NAME_FONTS }}:${LAYER_VERSION}" >> $GITHUB_ENV

      - name: "Get Lambda Layer ARN suffix for Chromium"
        id: chromium_layer_arn_suffix
        run: |
          LAYER_VERSION=$(aws lambda list-layer-versions \
          --layer-name ${{ inputs.AWS_LAMBDA_LAYER_NAME_CHROMIUM }} \
          --max-items 1 \
          --no-paginate \
          --query 'LayerVersions[0].Version' \
          --output text)
          echo "LAYER_ARN_SUFFIX=${{ inputs.AWS_LAMBDA_LAYER_NAME_CHROMIUM }}:${LAYER_VERSION}" >> $GITHUB_ENV

      - name: "Update Lambda function configuration"
        run: |
          aws lambda update-function-configuration \
          --function-name ${{ inputs.AWS_LAMBDA_FUNCTION_NAME }} \
          --layers \
          ${{ env.LAYER_ARN_PREFIX }}:${{ steps.app_layer_arn_suffix.outputs.LAYER_ARN_SUFFIX }} \
          ${{ env.LAYER_ARN_PREFIX }}:${{ steps.function_layer_arn_suffix.outputs.LAYER_ARN_SUFFIX }} \
          ${{ env.LAYER_ARN_PREFIX }}:${{ steps.fonts_layer_arn_suffix.outputs.LAYER_ARN_SUFFIX }} \
          ${{ env.LAYER_ARN_PREFIX }}:${{ steps.chromium_layer_arn_suffix.outputs.LAYER_ARN_SUFFIX }}
