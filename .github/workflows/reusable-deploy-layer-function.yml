name: "Reusable deploy function Lambda Layer"

on:
  workflow_call:
    inputs:
      env:
        type: string
        required: true
      artifact_name_function_code:
        type: string
        required: true
      artifact_name_node_modules:
        type: string
        required: true
      s3_bucket_name:
        type: string
        required: true
      s3_file_path_function_code:
        type: string
        required: true
      lambda_layer_name_node_modules:
        type: string
        required: true
    secrets:
      AWS_ACCOUNT_ID:
        required: true

permissions:
  id-token: write
  contents: read

env:
  zip_file_name: "Layer.zip"

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.filter.outputs.targets }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            targets:
              - "packages/app/**"
              - "packages/function/**"
              - ".github/actions/get-lambda-layer-arn-suffix/action.yml"
              - ".github/workflows/reusable-deploy.yml"
              - ".github/workflows/reusable-deploy-layer-function.yml"
              - ".github/workflows/reusable-publish-layer.yml"
              - ".github/workflows/reusable-update-function-configuration.yml"

  build-function:
    needs: changes
    if: ${{ needs.changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Node.js for app"
        uses: actions/setup-node@v4
        with:
          node-version: "18.16.1"
          cache: "npm"
          cache-dependency-path: "packages/app/package-lock.json"

      - name: "Install dependencies for app"
        run: npm ci --only=prod
        working-directory: "packages/app"

      - name: "Build app"
        run: npm run build
        working-directory: "packages/app"

      - name: "Setup Node.js for function"
        uses: actions/setup-node@v4
        with:
          node-version: "18.16.1"
          cache: "npm"
          cache-dependency-path: "packages/function/package-lock.json"

      - name: "Install dependencies for function build"
        run: npm ci
        working-directory: "packages/function"

      - name: "Build function"
        run: npm run build
        working-directory: "packages/function"

      - name: "Install dependencies for deploy"
        run: npm ci --only=prod
        working-directory: "packages/function"

      - name: "Prepare node_modules"
        run: |
          mkdir -p ./packages/function/dependencies/nodejs
          cp -r ./packages/function/node_modules ./packages/function/dependencies/nodejs

      - name: "Upload artifact for node_modules"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name_node_modules }}
          path: ./packages/function/dependencies
          if-no-files-found: error
          include-hidden-files: true
          retention-days: 1

      - name: "Prepare function code"
        run: |
          mkdir packages/function/dist/.output
          cp -r packages/app/.output/ packages/function/dist

      - name: "Upload artifact for function code"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name_function_code }}
          path: ./packages/function/dist
          if-no-files-found: error
          include-hidden-files: true
          retention-days: 1

  call-upload-to-s3-function-code:
    uses: ./.github/workflows/reusable-upload-to-s3.yml
    needs: build-function
    with:
      artifact_name: ${{ inputs.artifact_name_function_code }}
      s3_bucket_name: ${{ inputs.s3_bucket_name }}
      s3_file_path: ${{ inputs.s3_file_path_function_code }}
    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

  call-publish-layer-node-modules:
    uses: ./.github/workflows/reusable-publish-layer.yml
    needs: build-function
    with:
      artifact_name: ${{ inputs.artifact_name_node_modules }}
      s3_bucket_name: ${{ inputs.s3_bucket_name }}
      s3_file_path: "node_modules.zip"
      lambda_layer_name: ${{ inputs.lambda_layer_name_node_modules }}
      lambda_layer_description: "Node.js dependencies for Lambda function"
    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
